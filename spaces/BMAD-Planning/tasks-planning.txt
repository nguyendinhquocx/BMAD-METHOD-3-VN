# BMAD Planning Tasks - Nhi·ªám v·ª• Chuy√™n bi·ªát cho Giai ƒëo·∫°n L·∫≠p k·∫ø ho·∫°ch

---

## üß† Brainstorming Task - Analyst Core Task

### M·ª•c ƒë√≠ch
T·∫°o ƒëi·ªÅu ki·ªán cho creative ideation sessions ƒë·ªÉ ph√°t tri·ªÉn v√† refined concept t·ª´ √Ω t∆∞·ªüng ban ƒë·∫ßu.

### Task Execution Framework

#### 1. Pre-Brainstorming Setup
```markdown
**Session Preparation Checklist:**
- [ ] Gather initial user context v√† requirements
- [ ] Define session goals v√† desired outcomes
- [ ] Set time boundaries v√† expectations
- [ ] Establish ground rules cho brainstorming
- [ ] Prepare facilitation tools v√† techniques
```

#### 2. Session Structure

##### Phase 1: Problem Framing (10-15 minutes)
- **Objective**: Ensure shared understanding c·ªßa challenge
- **Activities**: 
  - Restate user's initial description
  - Identify core problems vs symptoms
  - Clarify context v√† constraints
  - Align on what success looks like

##### Phase 2: Divergent Ideation (30-40 minutes)  
- **Objective**: Generate maximum number of diverse ideas
- **Techniques Available**:
  - üåü **"What if..." scenarios**: Explore possibilities without constraints
  - üîÑ **Analogical thinking**: "Like X but for Y" approaches  
  - üîÄ **Reverse thinking**: "What if we did opposite?"
  - üß± **First principles**: Break down to fundamental truths
  - üéØ **SCAMPER method**: Substitute, Combine, Adapt, Modify, Put to other use, Eliminate, Reverse
  - ‚ú® **"Yes, and..." building**: Build on previous ideas
  - üé≤ **Random stimulus**: Use unrelated concepts to spark ideas

##### Phase 3: Idea Development (20-30 minutes)
- **Objective**: Develop most promising concepts
- **Activities**:
  - Group related ideas into themes
  - Identify high-potential concepts
  - Explore implementation possibilities
  - Consider user value v√† feasibility

##### Phase 4: Insight Synthesis (10-15 minutes)
- **Objective**: Capture key insights for next steps
- **Deliverables**:
  - Top 3-5 concept areas
  - Key insights v·ªÅ user needs
  - Potential implementation approaches
  - Questions for further research

#### 3. Facilitation Guidelines

##### Do's:
- ‚úÖ **Encourage wild ideas**: No judgment during ideation
- ‚úÖ **Build on others**: "Yes, and..." mentality
- ‚úÖ **Stay focused**: Keep discussions on topic
- ‚úÖ **Quantity over quality**: More ideas = better outcomes initially
- ‚úÖ **Visual thinking**: Use metaphors, analogies, scenarios
- ‚úÖ **Energy management**: Take breaks, vary activities

##### Don'ts:
- ‚ùå **Judge ideas prematurely**: Save evaluation for later
- ‚ùå **Get stuck on details**: Keep thinking high-level
- ‚ùå **Dominate conversation**: Ensure everyone contributes
- ‚ùå **Rush process**: Allow time for ideas to develop
- ‚ùå **Ignore constraints**: Balance creativity v·ªõi reality

#### 4. Output Templates

##### Brainstorming Session Summary
```markdown
# Brainstorming Session: {Topic}

## Session Info
- **Date**: {Date}
- **Duration**: {Duration}
- **Participants**: {Participants}
- **Facilitator**: Mary (Analyst)

## Key Insights Generated
### Insight 1: {Insight Name}
- **Description**: {What was discovered}
- **Implications**: {Why this matters}
- **Evidence**: {Supporting observations}

### Insight 2: {Insight Name}
{Repeat structure}

## Top Concept Areas
### Concept 1: {Concept Name}
- **Description**: {Brief explanation}
- **Potential Value**: {User/business value}
- **Feasibility**: {High/Medium/Low v·ªõi rationale}
- **Next Steps**: {What to explore further}

### Concept 2: {Concept Name}
{Repeat structure}

## Research Questions Identified
- {Question 1 for further investigation}
- {Question 2 for further investigation}
- {Question 3 for further investigation}

## Recommended Next Steps
- {Immediate action 1}
- {Immediate action 2}
- {Future consideration 1}
```

---

## üîç Deep Research Prompt Creation Task - Analyst Specialized Task

### M·ª•c ƒë√≠ch
T·∫°o comprehensive, structured research prompts cho specialized research agents ho·∫∑c detailed investigation.

### Task Execution Framework

#### 1. Research Objectives Definition
```markdown
**Research Planning Checklist:**
- [ ] Primary research goal clearly defined
- [ ] Specific questions to answer identified  
- [ ] Decision support needs understood
- [ ] Timeline v√† resource constraints known
- [ ] Success criteria established
```

#### 2. Research Scope Framework

##### Information Architecture
```markdown
**Research Focus Areas Template:**

### Area 1: {Focus Area Name}
**Primary Questions:**
- {Specific question 1}
- {Follow-up question}
- {Validation question}

**Information Types Needed:**
- {Quantitative data requirements}
- {Qualitative insights needed}
- {Specific metrics/statistics}

**Sources to Target:**
- {Primary source types}
- {Secondary source types}
- {Expert/authority sources}

### Area 2: {Focus Area Name}
{Repeat structure}
```

##### Research Methodology Specification
```markdown
**Methodology Framework:**
- **Approach**: {Quantitative/Qualitative/Mixed methods}
- **Analysis Framework**: {SWOT, Porter's 5 Forces, Competitive analysis, etc.}
- **Validation Methods**: {Cross-verification approach}
- **Quality Standards**: {Source authority, recency, relevance requirements}
```

#### 3. Prompt Generation Process

##### Step 1: Context Gathering
- Review brainstorming session outputs
- Identify knowledge gaps
- Prioritize research questions by importance
- Assess available resources v√† constraints

##### Step 2: Research Architecture Design
- Structure research into logical focus areas
- Define specific questions for each area
- Identify preferred information sources
- Set quality v√† validation standards

##### Step 3: Output Specification
- Define desired deliverable format
- Specify analysis requirements
- Set evidence documentation standards
- Establish timeline v√† milestones

##### Step 4: Prompt Assembly
- Combine all elements into comprehensive research brief
- Include sufficient context for standalone execution
- Provide clear success criteria
- Add constraints v√† limitations

#### 4. Quality Validation

##### Prompt Quality Checklist
- [ ] **Clarity**: Research objectives clearly stated
- [ ] **Completeness**: All necessary information provided
- [ ] **Actionability**: Specific questions v√† tasks defined
- [ ] **Feasibility**: Reasonable scope given constraints
- [ ] **Value**: Results will inform important decisions

##### Research Scope Validation
- [ ] **Focus**: Questions directly support decision needs
- [ ] **Balance**: Appropriate mix c·ªßa breadth v√† depth
- [ ] **Prioritization**: Most important questions identified
- [ ] **Dependencies**: Logical research sequence defined
- [ ] **Deliverables**: Output format suitable for next steps

---

## üìä PRD Development Task - PM Core Task

### M·ª•c ƒë√≠ch
Transform research insights v√† user needs th√†nh comprehensive Product Requirements Document.

### Task Execution Framework

#### 1. PRD Planning Phase
```markdown
**PRD Preparation Checklist:**
- [ ] Research findings reviewed v√† synthesized
- [ ] User personas v√† needs clearly understood
- [ ] Business goals v√† success metrics defined
- [ ] Technical constraints identified
- [ ] Stakeholder input gathered
```

#### 2. PRD Development Process

##### Phase 1: Foundation Setting (20% effort)
- **Problem Definition**: Clear, compelling problem statement
- **User Analysis**: Detailed user personas v√† journey mapping
- **Market Context**: Competitive landscape v√† opportunity sizing
- **Success Metrics**: Measurable goals tied to business value

##### Phase 2: Requirements Engineering (40% effort)
- **Functional Requirements**: User stories v·ªõi acceptance criteria
- **Non-Functional Requirements**: Performance, security, scalability needs
- **UI/UX Requirements**: User experience principles v√† constraints
- **Integration Requirements**: External systems v√† data flows

##### Phase 3: MVP Definition (25% effort)  
- **Core Feature Set**: Essential features for MVP success
- **Scope Boundaries**: Explicit inclusions v√† exclusions
- **Epic Breakdown**: High-level development structure
- **Validation Approach**: How to test MVP success

##### Phase 4: Implementation Guidance (15% effort)
- **Technical Constraints**: Platform, technology preferences
- **Resource Requirements**: Team, timeline, budget considerations
- **Risk Assessment**: Technical, business, adoption risks
- **Success Criteria**: Definition of project success

#### 3. PRD Sections Deep Dive

##### Executive Summary Guidelines
- **Length**: 2-3 paragraphs maximum
- **Content**: Problem, solution, impact, success metrics
- **Audience**: Executives v√† senior stakeholders
- **Tone**: Compelling, business-focused, results-oriented

##### User Stories Framework
```markdown
**Story Template:**
As a {user type}
I want {capability}
So that {benefit/outcome}

**Acceptance Criteria:**
- {Testable criterion 1}
- {Testable criterion 2}
- {Testable criterion 3}

**Priority**: {Critical/High/Medium/Low}
**Epic**: {Associated epic}
**Dependencies**: {Other stories this depends on}
```

##### Non-Functional Requirements Categories
- **Performance**: Response times, throughput, scalability
- **Security**: Authentication, authorization, data protection
- **Usability**: User experience standards, accessibility
- **Reliability**: Availability, fault tolerance, recovery
- **Maintainability**: Code quality, documentation standards

#### 4. Quality Assurance Process

##### PRD Review Framework
- **Completeness Check**: All template sections populated
- **Consistency Validation**: No contradictions between sections
- **Clarity Assessment**: Language clear for all audiences
- **Feasibility Review**: Requirements achievable within constraints
- **Alignment Verification**: Supports stated business goals

##### Stakeholder Validation Process
- **Internal Review**: Team feedback on technical feasibility
- **Business Review**: Stakeholder alignment on scope v√† priorities
- **User Validation**: User persona accuracy v√† journey completeness
- **Final Approval**: Formal sign-off from decision makers

---

## ‚ö° Advanced Elicitation Task - Enhancement Tool

### M·ª•c ƒë√≠ch
Cung c·∫•p structured reflection v√† brainstorming options ƒë·ªÉ enhance quality c·ªßa any content ho·∫∑c analysis.

### Available Actions (0-9)

#### 0. Expand or Contract for Audience
**When to use**: Content needs adjustment cho specific audience ho·∫∑c detail level
**Process**: 
- Ask user: expand (more detail) ho·∫∑c contract (simplify)
- Identify target audience if applicable
- Adjust content accordingly from current role perspective

#### 1. Explain Reasoning (Chain of Thought)
**When to use**: Need transparency in decision-making process
**Process**: Walk through step-by-step thinking process that led to current recommendations

#### 2. Critique and Refine
**When to use**: Content needs quality improvement
**Process**: Identify deficiencies, inconsistencies, improvement areas t·ª´ current role perspective v√† propose enhanced version

#### 3. Analyze Logical Flow and Dependencies
**When to use**: Need to verify structural coherence
**Process**: Examine content structure cho logical progression, internal consistency, v√† necessary dependencies

#### 4. Assess Alignment with Overall Goals  
**When to use**: Need to ensure content supports project objectives
**Process**: Evaluate how current content contributes to stated goals t·ª´ current role perspective

#### 5. Identify Potential Risks and Unforeseen Issues
**When to use**: Need proactive risk management
**Process**: Brainstorm potential risks, edge cases, unintended consequences based on role expertise

#### 6. Challenge from Critical Perspective
**When to use**: Need devil's advocate analysis
**Process**: Apply critical perspective, either from current role ho·∫∑c specified alternative viewpoint

#### 7. Explore Diverse Alternatives (Tree of Thought)
**When to use**: Need to consider different approaches
**Process**: Brainstorm diverse approaches, then present 2 detailed alternatives with pros/cons

#### 8. Hindsight is 20/20 Reflection
**When to use**: Need to anticipate potential future regrets
**Process**: Imagine project retrospective v√† identify "what if we had known/done X" scenarios

#### 9. Proceed / No Further Actions
**When to use**: Content is satisfactory, ready to move forward
**Process**: Acknowledge completion v√† prepare for next phase

### Usage Protocol
1. **Present Action List**: Show numbered options 0-9
2. **Wait for Selection**: User chooses action number
3. **Execute Action**: Follow specific action protocol
4. **Return to Menu**: Ask if they want another action ho·∫∑c option 9
5. **Continue Until Done**: Repeat until user selects option 9

---

## üîÑ Course Correction Task - Change Management

### M·ª•c ƒë√≠ch
Navigate major changes, pivots, ho·∫∑c significant issues discovered during planning process.

### Task Execution Framework

#### 1. Change Trigger Analysis
```markdown
**Change Assessment Checklist:**
- [ ] Triggering event clearly identified
- [ ] Root cause analysis completed
- [ ] Impact scope assessed
- [ ] Stakeholders notified
- [ ] Decision timeline established
```

#### 2. Impact Assessment Process

##### Current State Analysis
- **Completed Work**: What's been delivered and validated
- **In-Progress Work**: What's currently being developed
- **Planned Work**: What's scheduled but not started
- **Resource Investment**: Time, effort, cost invested to date

##### Change Impact Evaluation
- **Requirements Impact**: Changes needed to PRD
- **Architecture Impact**: Technical design implications
- **Timeline Impact**: Schedule adjustments required
- **Resource Impact**: Team, budget, skill implications

#### 3. Path Forward Options

##### Option 1: Minor Adjustment
- **Scope**: Limited changes to current approach
- **Effort**: Minimal rework required
- **Risk**: Low disruption to timeline
- **When Appropriate**: Change is contained v√† incremental

##### Option 2: Major Pivot
- **Scope**: Significant changes to direction
- **Effort**: Substantial rework required  
- **Risk**: Timeline v√† resource impact
- **When Appropriate**: Fundamental assumptions changed

##### Option 3: Scope Reduction
- **Scope**: Remove features/requirements to stay on track
- **Effort**: Eliminate planned work
- **Risk**: Reduced MVP value
- **When Appropriate**: Timeline ho·∫∑c resource constraints

##### Option 4: Resource Augmentation
- **Scope**: Add resources to handle additional complexity
- **Effort**: Maintain current scope v·ªõi more support
- **Risk**: Cost increase, coordination complexity
- **When Appropriate**: Budget available, timeline critical

#### 4. Decision Framework

##### Decision Criteria
- **User Impact**: Effect on user value v√† experience
- **Business Impact**: Effect on business goals v√† ROI
- **Technical Impact**: Effect on architecture v√† implementation
- **Resource Impact**: Effect on timeline, budget, team

##### Stakeholder Analysis
- **Decision Makers**: Who needs to approve change
- **Implementers**: Who will execute the change
- **End Users**: Who will be affected by change
- **Sponsors**: Who is funding the effort

##### Risk Assessment
- **Implementation Risk**: Can the change be executed successfully
- **Timeline Risk**: Will deadlines be missed
- **Quality Risk**: Will quality standards be compromised
- **Adoption Risk**: Will users accept the change

---

## üìã Planning Phase Completion Task - Quality Gate

### M·ª•c ƒë√≠ch
Ensure all planning deliverables meet quality standards before transitioning to Architecture phase.

### Completion Criteria

#### Analyst Deliverables Validation
- [ ] **Project Brief**: Comprehensive v·ªõi clear problem definition
- [ ] **Research**: Market insights v√† competitive analysis complete
- [ ] **User Analysis**: Personas validated v·ªõi real user input
- [ ] **Concept Development**: Top ideas evaluated v√† prioritized

#### PM Deliverables Validation  
- [ ] **PRD Completeness**: All sections populated v·ªõi adequate detail
- [ ] **MVP Definition**: Scope clearly bounded v·ªõi rationale
- [ ] **Epic Structure**: Development path logical v√† feasible
- [ ] **Requirements Quality**: Testable, unambiguous, user-focused
- [ ] **Risk Assessment**: Major risks identified v·ªõi mitigation plans

#### Cross-Functional Validation
- [ ] **Stakeholder Alignment**: Key stakeholders reviewed v√† approved
- [ ] **Technical Feasibility**: No obvious technical blockers
- [ ] **Resource Reality**: Scope achievable v·ªõi available resources
- [ ] **Timeline Reasonableness**: Delivery expectations realistic

#### Handoff Preparation
- [ ] **Architecture Package**: All documents needed for architecture design
- [ ] **Decision Documentation**: Key decisions recorded v·ªõi rationale
- [ ] **Outstanding Questions**: Issues flagged for architecture team
- [ ] **Success Criteria**: Clear definition of architecture success

### Quality Gates

#### Gate 1: Content Completeness
**Criteria**: All required sections populated v·ªõi meaningful content
**Validator**: PM v·ªõi Analyst review
**Remediation**: Complete missing sections tr∆∞·ªõc proceeding

#### Gate 2: Internal Consistency  
**Criteria**: No contradictions between different documents
**Validator**: Cross-document review
**Remediation**: Resolve conflicts v√† update all affected documents

#### Gate 3: Stakeholder Alignment
**Criteria**: Key stakeholders agree v·ªõi direction v√† scope
**Validator**: Formal stakeholder review meeting
**Remediation**: Address concerns v√† update documents as needed

#### Gate 4: Feasibility Validation
**Criteria**: Proposed solution appears technically v√† resource feasible
**Validator**: Technical review v·ªõi available expertise
**Remediation**: Adjust scope ho·∫∑c approach based on feasibility assessment

### Handoff Protocol

#### Architecture Handoff Package
```markdown
**Required Deliverables:**
- [ ] PRD.md (validated with PM checklist)
- [ ] Project Brief (with market insights)
- [ ] User Personas v√† Journey Maps
- [ ] Epic Breakdown v·ªõi priorities
- [ ] Technical Constraints Documentation
- [ ] Risk Assessment v·ªõi mitigation strategies

**Handoff Meeting Agenda:**
1. **Context Setting** (10 min): Project background v√† goals
2. **Requirements Overview** (20 min): PRD walkthrough  
3. **User Analysis** (15 min): Personas v√† journey maps
4. **Technical Discussion** (20 min): Constraints v√† preferences
5. **Questions & Clarifications** (15 min): Architecture team Q&A
6. **Next Steps** (10 min): Timeline, deliverables, communication plan
```

#### Success Metrics for Architecture Phase
- **Timeline**: Architecture documents delivered on schedule
- **Quality**: Documents pass architecture validation checklists
- **Completeness**: All technical decisions documented v·ªõi rationale
- **Alignment**: Architecture supports all PRD requirements
- **Feasibility**: Implementation approach confirmed as viable

---

## üöÄ Planning Tasks Excellence!

C√°c tasks n√†y cung c·∫•p structured approach cho:

- üß† **Creative Ideation**: Structured brainstorming v·ªõi proven techniques
- üîç **Research Excellence**: Comprehensive research prompt creation
- üìä **Requirements Engineering**: Systematic PRD development
- ‚ö° **Quality Enhancement**: Advanced elicitation for content improvement
- üîÑ **Change Management**: Systematic handling c·ªßa major changes
- üìã **Quality Assurance**: Rigorous validation tr∆∞·ªõc phase transition

**Use these tasks to ensure consistent, high-quality planning outcomes! üéØ‚ú®**